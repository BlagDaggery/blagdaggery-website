@import "variables";
@import "typography";
@import "header";
@import "footer";

html, body {
	padding: 0;
	margin: 0;
	font-family: sans-serif;
	height: 100%;
	background-color: $sidewalk;
}

#wrapper {
	min-height: 100%;
	position: relative;
}

/* Home Page - Hero */
.hero {
	text-align: center;
	height: 350px;
	background: url(../img/maine-panorama-home-hero.jpg) no-repeat center center;
	background-size: cover;
	color: $asphault;
	h1 {
		padding: 70px 0 0 0;
	}
}

/* Home Page - Detail */
.detail {
	margin-top: 0;
	background-color: $sidewalk;
	color: $asphault;
	text-align: center;
	padding-bottom: 60px;
	.column {
		width: 35%;
		display: inline-block;
		text-align: center;
		.detail-container {
			padding: 20px;
			a {
				color: $asphault;
				text-decoration: none;
				img {
					margin: 0 auto 0;
					width: 85%;
					height: auto;
					border: 2px solid transparent;
				}
				&:hover {
						text-decoration: underline;
						img {
						border: 2px solid $asphault;
					}
				}
			}
		}
	}
}


/* Article Pages */
.article {
	background-color: $sidewalk;
	color: $asphault;
	padding-bottom: 60px;
	.headline {
		text-align: center;
		h1 {
			padding-top: 30px;
			text-align: center;
		}
		img {
			width: 40%;
			height: auto;
		}
	}
	.content {
		width: 40%;
		height: 100%;
		margin: auto;
		padding: 0 0 10px 0;
		.menu {
			margin-top: 20px;
			.menu-text {
				padding: 5px;
                // Blaine: if possible, you want to nest less, rather than nest more.
                // These "a" styles will produce this selector: ".article .content .menu .menu-text a"
                // which is a selector with 5 level specificity, making it harder to override elsewhere in the website
                // you could consider moving the ".menu-text" block out of the ".menu"
                // There are def pros and cons. Using this method, it clearly demonstrates that .menu-text is an element that is
                // inside of .menu, which is inside of .content.
                // However, very specific and powerful CSS rules can become unwieldy as an application grows 
 				a {
					text-decoration: none;
					color: $asphault;
					&:hover {
						text-decoration: underline;
					}
				}
				hr {
					color: $asphault;
				}
			}
		}
	}
}


// Blaine: change this to use the new breakpoint mixin that I added (@mobile) in _variables.scss

@media (max-width: 650px) {
    /* Header */
    header nav a {
        display: block;
        margin-bottom: 10px;
    }
    /* Footer */
    footer {
    	height: 140px;
    }
    footer nav a {
    	display: block;
    	margin-bottom: 10px;
    }
    /* Home Page - Detail */
    .detail {
    	padding-bottom: 140px;
    	.column {
        	display: block;
        	width: 100%;
        }
    }
    /* Article */
    .article {
    	padding-bottom: 140px;
    	.headline img {
    		width: 90%;
    		height: auto;
    	}
    	.content {
    		width: 90%;
    	}
    }
}

